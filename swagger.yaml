basePath: /
consumes:
- application/json
definitions:
  ResponseErr:
    description: ResponseErr - Error struct for Http response
    properties:
      error:
        type: string
        x-go-name: Error
    type: object
    x-go-package: github.com/kafkaesque-io/pulsar-beam/src/util
  Status:
    description: Status can be used for webhook status
    format: int64
    type: integer
    x-go-package: github.com/kafkaesque-io/pulsar-beam/src/model
  TopicConfig:
    properties:
      CreatedAt:
        format: date-time
        type: string
      Key:
        type: string
      Notes:
        type: string
      PulsarURL:
        type: string
      Tenant:
        type: string
      Token:
        type: string
      TopicFullName:
        type: string
      TopicStatus:
        $ref: '#/definitions/Status'
      UpdatedAt:
        format: date-time
        type: string
      Webhooks:
        items:
          $ref: '#/definitions/WebhookConfig'
        type: array
    title: TopicConfig - a configuraion for topic and its webhook configuration.
    type: object
    x-go-package: github.com/kafkaesque-io/pulsar-beam/src/model
  TopicKey:
    description: TopicKey represents a struct to identify a topic
    properties:
      PulsarURL:
        type: string
      TopicFullName:
        type: string
    type: object
    x-go-package: github.com/kafkaesque-io/pulsar-beam/src/model
  WebhookConfig:
    description: WebhookConfig - a configuration for webhook
    properties:
      createdAt:
        format: date-time
        type: string
        x-go-name: CreatedAt
      deletedAt:
        format: date-time
        type: string
        x-go-name: DeletedAt
      headers:
        items:
          type: string
        type: array
        x-go-name: Headers
      initialPosition:
        type: string
        x-go-name: InitialPosition
      subscription:
        type: string
        x-go-name: Subscription
      subscriptionType:
        type: string
        x-go-name: SubscriptionType
      updatedAt:
        format: date-time
        type: string
        x-go-name: UpdatedAt
      url:
        type: string
        x-go-name: URL
      webhookStatus:
        $ref: '#/definitions/Status'
    type: object
    x-go-package: github.com/kafkaesque-io/pulsar-beam/src/model
info:
  description: Documentation of Pulsar Beam API.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: Pulsar Beam
  version: 0.2.0
paths:
  /v1/firehose:
    post:
      description: 'headers:'
      operationId: idOfFirehoseEndpoint
      responses:
        "200": {}
        "401":
          $ref: '#/responses/errorResponse'
        "500":
          $ref: '#/responses/errorResponse'
        "503":
          $ref: '#/responses/errorResponse'
      summary: The endpoint receives a message in HTTP body that will be sent to Pulsar.
      tags:
      - Event-Receiver
  /v2/topic:
    delete:
      description: 'headers:'
      operationId: idOfDeleteTopicKey
      responses:
        "200":
          $ref: '#/responses/topicDeleteResponse'
        "403":
          $ref: '#/responses/errorResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorResponse'
        "500":
          $ref: '#/responses/errorResponse'
      summary: Delete a topic based on topic name.
      tags:
      - Delete-Topic
    get:
      description: 'headers:'
      operationId: idOfGetTopic
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/TopicKey'
      responses:
        "200":
          $ref: '#/responses/topicGetResponse'
        "403": {}
        "404":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorResponse'
        "500":
          $ref: '#/responses/errorResponse'
      summary: Get a topic based on topic name.
      tags:
      - Get-Topic
    post:
      operationId: idOfUpdateTopic
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/TopicConfig'
      responses:
        "201":
          $ref: '#/responses/topicUpdateResponse'
        "403":
          $ref: '#/responses/errorResponse'
        "409":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorResponse'
        "500":
          $ref: '#/responses/errorResponse'
      summary: Create or update a topic.
      tags:
      - Create-or-Update-Topic
  /v2/topic/{topicKey}:
    delete:
      description: 'headers:'
      operationId: idOfDeleteTopic
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/TopicKey'
      responses:
        "200":
          $ref: '#/responses/topicDeleteResponse'
        "403":
          $ref: '#/responses/errorResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorResponse'
        "500":
          $ref: '#/responses/errorResponse'
      summary: |-
        Delete a topic based on topic key.
        Please do NOT specifiy key. The topic status must be for 1 for activation.
      tags:
      - Delete-Topic
    get:
      description: 'headers:'
      operationId: idOfGetTopicKey
      responses:
        "200":
          $ref: '#/responses/topicGetResponse'
        "403":
          $ref: '#/responses/errorResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorResponse'
        "500":
          $ref: '#/responses/errorResponse'
      summary: Get a topic based on topic key.
      tags:
      - Get-Topic
produces:
- application/json
- 'Schemes:'
- https
responses:
  errorResponse:
    schema:
      $ref: '#/definitions/ResponseErr'
  topicDeleteResponse:
    headers:
      Body: {}
    schema:
      $ref: '#/definitions/TopicConfig'
  topicGetResponse:
    headers:
      Body: {}
    schema:
      $ref: '#/definitions/TopicConfig'
  topicUpdateResponse:
    headers:
      Body: {}
    schema:
      $ref: '#/definitions/TopicConfig'
schemes:
- http
security:
- bearerAuth:
  - '[]'
securityDefinitions:
  bearerAuth:
    type: bearer
swagger: "2.0"
