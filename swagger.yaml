basePath: /
consumes:
- application/json
definitions:
  ResponseErr:
    description: ResponseErr - Error struct for Http response
    properties:
      error:
        type: string
        x-go-name: Error
    type: object
    x-go-package: github.com/kafkaesque-io/pulsar-beam/src/util
  Status:
    description: Status can be used for webhook status
    format: int64
    type: integer
    x-go-package: github.com/kafkaesque-io/pulsar-beam/src/model
  TopicConfig:
    properties:
      CreatedAt:
        format: date-time
        type: string
      Key:
        type: string
      Notes:
        type: string
      PulsarURL:
        type: string
      Tenant:
        type: string
      Token:
        type: string
      TopicFullName:
        type: string
      TopicStatus:
        $ref: '#/definitions/Status'
      UpdatedAt:
        format: date-time
        type: string
      Webhooks:
        items:
          $ref: '#/definitions/WebhookConfig'
        type: array
    title: TopicConfig - a configuraion for topic and its webhook configuration.
    type: object
    x-go-package: github.com/kafkaesque-io/pulsar-beam/src/model
  TopicKey:
    description: TopicKey represents a struct to identify a topic
    properties:
      PulsarURL:
        type: string
      TopicFullName:
        type: string
    type: object
    x-go-package: github.com/kafkaesque-io/pulsar-beam/src/model
  WebhookConfig:
    description: WebhookConfig - a configuration for webhook
    properties:
      createdAt:
        format: date-time
        type: string
        x-go-name: CreatedAt
      deletedAt:
        format: date-time
        type: string
        x-go-name: DeletedAt
      headers:
        items:
          type: string
        type: array
        x-go-name: Headers
      initialPosition:
        type: string
        x-go-name: InitialPosition
      subscription:
        type: string
        x-go-name: Subscription
      subscriptionType:
        type: string
        x-go-name: SubscriptionType
      updatedAt:
        format: date-time
        type: string
        x-go-name: UpdatedAt
      url:
        type: string
        x-go-name: URL
      webhookStatus:
        $ref: '#/definitions/Status'
    type: object
    x-go-package: github.com/kafkaesque-io/pulsar-beam/src/model
  errorResponse:
    properties:
      Body:
        $ref: '#/definitions/ResponseErr'
    required:
    - Body
    type: object
    x-go-name: errorResponse2
    x-go-package: github.com/kafkaesque-io/pulsar-beam/src/docs
info:
  description: Documentation of Pulsar Beam API.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: Pulsar Beam
  version: 0.2.0
paths:
  /v2/firehose/{persistent}/{tenant}/{namespace}/{topic}:
    post:
      operationId: idOfFirehoseEndpoint
      responses:
        "200":
          description: successfully sent messages
        "401":
          description: authentication failure
          schema:
            $ref: '#/definitions/errorResponse'
        "422":
          description: invalid request parameters
          schema:
            $ref: '#/definitions/errorResponse'
        "500":
          description: failed to read the http body
          schema:
            $ref: '#/definitions/errorResponse'
        "503":
          description: failed to send messages to Pulsar
          schema:
            $ref: '#/definitions/errorResponse'
      summary: The endpoint receives a message in HTTP body that will be sent to Pulsar.
      tags:
      - Send-Messages
  /v2/poll/{persistent}/{tenant}/{namespace}/{topic}:
    get:
      operationId: idOfHTTPLongPolling
      parameters:
      - description: specify subscription type in exclusive, shared, keyshared, or
          failover, the default is exclusive
        in: query
        name: SubscriptionType
        type: string
      - description: subscription name in minimum 5 charaters, a random subscription
          will be generated if not specified
        in: query
        name: SubscriptionName
        type: string
      - description: the batch size of the message list. The poll responds to the
          client When the batch size is reached. The default is 10 messages
        in: query
        name: batchSize
        type: integer
      - description: Per message time out in milliseconds to wait the message from
          the Pulsar topic. The default is 300 millisecond
        in: query
        name: perMessageTimeoutMs
        type: integer
      produces:
      - text/event-poll
      responses:
        "200":
          description: successfully subscribed and received messages from a Pulsar
            topic
        "204":
          description: successfully subscribed to a Pulsar topic but receives no messages
        "401":
          description: authentication failure
          schema:
            $ref: '#/definitions/errorResponse'
        "422":
          description: invalid request parameters
          schema:
            $ref: '#/definitions/errorResponse'
        "500":
          description: failed to subscribe or receive messages from Pulsar
          schema:
            $ref: '#/definitions/errorResponse'
      summary: The long polling endpoint receives messages in HTTP body from a Pulsar
        topic.
      tags:
      - Long-Polling
  /v2/sse/{persistent}/{tenant}/{namespace}/{topic}:
    get:
      operationId: idOfHTTPSeverSentEvent
      parameters:
      - description: specify subscription initial position in either latest or earliest,
          the default is latest
        in: query
        name: SubscriptionInitialPosition
        type: string
      - description: specify subscription type in exclusive, shared, keyshared, or
          failover, the default is exclusive
        in: query
        name: SubscriptionType
        type: string
      - description: subscription name in minimum 5 charaters, a random subscription
          will be generated if not specified
        in: query
        name: SubscriptionName
        type: string
      produces:
      - text/event-stream
      responses:
        "401":
          description: authentication failure
          schema:
            $ref: '#/definitions/errorResponse'
        "422":
          description: invalid request parameters
          schema:
            $ref: '#/definitions/errorResponse'
        "500":
          description: failed to subscribe or receive messages from Pulsar
          schema:
            $ref: '#/definitions/errorResponse'
      summary: The HTTP SSE endpoint receives messages in HTTP body from a Pulsar
        topic.
      tags:
      - SSE-Event-Streaming
  /v2/topic:
    delete:
      description: 'headers:'
      operationId: idOfDeleteTopicKey
      responses:
        "200":
          $ref: '#/responses/topicDeleteResponse'
        "403":
          $ref: '#/responses/errorResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorResponse'
        "500":
          $ref: '#/responses/errorResponse'
      summary: Delete a topic configuration based on topic name.
      tags:
      - Delete-Topic
    get:
      description: 'headers:'
      operationId: idOfGetTopic
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/TopicKey'
      responses:
        "200":
          $ref: '#/responses/topicGetResponse'
        "403": {}
        "404":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorResponse'
        "500":
          $ref: '#/responses/errorResponse'
      summary: Get a topic configuration based on the topic name.
      tags:
      - Get-Topic
    post:
      description: Please do NOT specifiy key. The topic status must be for 1 for
        activation.
      operationId: idOfUpdateTopic
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/TopicConfig'
      responses:
        "201":
          $ref: '#/responses/topicUpdateResponse'
        "403": {}
        "409":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorResponse'
        "500":
          $ref: '#/responses/errorResponse'
      summary: Create or update a topic configuration.
      tags:
      - Create-or-Update-Topic
  /v2/topic/{topicKey}:
    delete:
      description: 'headers:'
      operationId: idOfDeleteTopic
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/TopicKey'
      responses:
        "200":
          $ref: '#/responses/topicDeleteResponse'
        "403":
          $ref: '#/responses/errorResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorResponse'
        "500":
          $ref: '#/responses/errorResponse'
      summary: Delete a topic configuration based on topic key.
      tags:
      - Delete-Topic
    get:
      description: 'headers:'
      operationId: idOfGetTopicKey
      responses:
        "200":
          $ref: '#/responses/topicGetResponse'
        "403": {}
        "404":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorResponse'
        "500":
          $ref: '#/responses/errorResponse'
      summary: Get a topic configuration based on topic key.
      tags:
      - Get-Topic
produces:
- application/json
- 'Schemes:'
- https
responses:
  errorResponse:
    schema:
      $ref: '#/definitions/ResponseErr'
  topicDeleteResponse:
    headers:
      Body: {}
    schema:
      $ref: '#/definitions/TopicConfig'
  topicGetResponse:
    headers:
      Body: {}
    schema:
      $ref: '#/definitions/TopicConfig'
  topicUpdateResponse:
    headers:
      Body: {}
    schema:
      $ref: '#/definitions/TopicConfig'
schemes:
- http
security:
- bearerAuth:
  - '[]'
securityDefinitions:
  bearerAuth:
    type: bearer
swagger: "2.0"
